v0.7

Names of executables are now configuration parameters.  This allows for overriding of executable
names on platforms where the name may vary.

Added DELETE target for superfamiles.

Calculation methods now return JSON dictionaries of job listings that include the following:
    id: id string
    description: description string, e.g., "FastTree tree of superfamily aspartic_peptidases.myseqs"
    status: job.status, e.g., "deferred"
    tasktype: "align" or "tree"
    taskname: name of aligner or builder
    family: name of family
    superfamily: name of superfamily
    is_queued: True if queued.  This will not be true until after alignment in some cases.
    is_started: True if job is running.
    is_finished: True if job is finished (since queue was reset).
    is_failed: True if job failed due to an error.
    created_at: ISO format job creation time or "None".
    enqueued_at: ISO format time of queueing or "None".
    ended_at: ISO format ending time or "None".
    started_at: ISO format start time or "None".
    estimated_job_time: Estimated run time (wallclock) in seconds.
    queue_name: Name of queue (for future queries)
    queue_position: position in queue, if queued, or length of queue if not.
    estimated_queue_time: Estimated wallclock time of preceding jobs, in seconds.
For now all estimated times are bogus and simply placeholders until timing models are established.

Config parameters are settable via environmental variables starting with "LORAX_".

Configuration parameters are now settable by instance as a pyfile.

Improved logfile content.

Removed /config target as insecure.

Changed configuration from config.json to a Flask-standard pyfile.  See default_settings.py.

v0.6

Added /trees/<family>/hmmalign_FastTree target to chain calculations.

Added a polling method in test_all.sh to poll a URL until >= 0, useful for status polls.

Queueing for FastTree calculation via rq added.  Expects a queue named "FastTree".

v0.5

Added superfamily targets.

Added test_all.sh script to do full testing.

Changed "tree" target to tree.nwk.

Compute stats on HMM files and return as part of HMM addition.  If hmmstats fails,
abort with 417 and delete the HMM file.

Added /trees/families.json target.

More run-time arguments:
Usage: lorax [OPTIONS]

Options:
  -d, --debug             Enable (unsafe) debugging.  [default: False]
  -v, --verbose           Log debugging info to stderr.  [default: False]
  -q, --quiet             Suppress low-level log info.  [default: False]
  --no_logfile            Suppress logging to file.  [default: False]
  -c, --config_file TEXT  Configuration file name.  [default: config.json]
  --port TEXT             Port on which to listen.  [default: 58927]
  --host TEXT             Host IP on which to listen  [default: 127.0.0.1]
  --version               Show the version and exit.
  --help                  Show this message and exit.

  Joel Berendzen <joelb@ncgr.org>. Copyright (C) 2017, The National Center
  for Genome Resources.  All rights reserved. https://github.com/ncgr/lorax

Renamed /config target as /config.json

Returned JSON objects are now reponses of type 'application/json'.

Added /log.txt target that returns the current log file.

Added click as a dependency, removed flaskrun.py.

Moved config.py code to __init__.py.

Removed AutoIndex of / directory.

Changed HMM from POST to PUT for consistency with HTML specs.  Added put_HMM.sh script.

Removed test for <family> naming, anything that passes Path addition will work.

v 0.4
