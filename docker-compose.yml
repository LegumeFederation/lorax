services:
  flask:
    build: .
    image: lorax:latest
    environment:
      LORAX_RQ_REDIS_URL: redis://redis:6379/0
      LORAX_PORT:
      # testing
      LORAX_HOST: localhost
      LORAX_CURL_URL: localhost:${LORAX_PORT}
      LORAX_CURL_ARGS: ''
    ports:
      - "${LORAX_PORT}:${LORAX_PORT}"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - data:/usr/local/var/data

  redis:
    image: redis:6.2.2-alpine3.13
    healthcheck:
      test: "redis-cli ping"

  rq_worker_alignment:
    image: lorax:latest
    environment:
      LORAX_PORT:
    command: rq worker --url redis://redis:6379 alignment
    depends_on:
      redis:
        condition: service_healthy
# in case "lorax" image is rebuilt
      flask:
        condition: service_started
    volumes:
      - data:/usr/local/var/data

  rq_worker_treebuilding:
    image: lorax:latest
    environment:
      LORAX_PORT:
    command: rq worker --url redis://redis:6379 treebuilding
    depends_on:
      redis:
        condition: service_healthy
# in case "lorax" image is rebuilt
      flask:
        condition: service_started
    volumes:
      - data:/usr/local/var/data

# https://github.com/Parallels/rq-dashboard#installing-with-docker
  rq_dashboard:
    image: eoranged/rq-dashboard:v0.6.3
    environment:
      RQ_DASHBOARD_REDIS_URL: redis://redis:6379
    ports:
      - "9181:9181"
    depends_on:
      redis:
        condition: service_healthy
    profiles:
      - rq_dashboard

volumes:
  data:
